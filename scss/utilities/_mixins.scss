//Button styling
@mixin btn-stylin {
margin-top: 15px;
width: $width;
color: map-get($colors,'white');
border: none;
padding: 10px 0;
text-transform: uppercase;
border-radius: 5px;
}

//Images styling
@mixin center-stylin {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

@mixin img-space {
margin-top: 10px;
max-width: 100%;
}

//Theme color mapping
@mixin theme-colors($map) {
  @each $num-col, $color in $map{
    &-#{$num-col} {
    background-color: $color;
    }
  }
}

//Flex key mapping
@mixin flex-keys($keys) {
  @each $num-col-f, $flex-key in $col-flex{
    &-#{$num-col-f} {
      flex-basis: $flex-key ;
    }
  }
}

// @mixin hover-test($what) {
//   @each $color, $keys in $colors{
//     &.#{$color} {
//       background-color: lighten(map-get($color, null) * 15%) ;
//     }
//   }
// }

// $btn-def: #51ddfc;
// $btn-suc: #63cc82;
// $btn-err: #e4757a;
// $btn-warn: #fd7856;
// $btn-info: #927bc1;


//Hover Effect  + transition
@mixin hovering($colorkeys) {
  $value: map-get($btn-colors, $colorkeys);
  $colorkeys: map-get($btn-colors, null);
  @each $colorkeys, $key-color in $btn-colors {
      background-color: map-get(lighten($btn-colors, $colorkeys) *15%);
  }
  // &:hover {
  //   background-color: lighten($btn-def, 15%);
  // }
}
// @mixin hover{
//   :hover {
//     @each $num-color,$key-color in $colors{
//       &.#{$num-color}{
//         background-color: black;
//       }
//     }
//     }
//   }



// Created a hover effect for buttons.
// For the effect, lighten the button's background color by 15%.
// Add a CSS transition so that the color change fades in.